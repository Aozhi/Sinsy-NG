# CMake generated Testfile for 
# Source directory: E:/gitcode/Sinsy-NG/library/libsamplerate
# Build directory: E:/gitcode/Sinsy-NG/library/libsamplerate/cmake
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(callback_hang_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/callback_hang_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(callback_hang_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/callback_hang_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(callback_hang_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/callback_hang_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(callback_hang_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/callback_hang_test.exe")
else()
  add_test(callback_hang_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(callback_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/callback_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(callback_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/callback_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(callback_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/callback_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(callback_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/callback_test.exe")
else()
  add_test(callback_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(clone_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/clone_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(clone_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/clone_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(clone_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/clone_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(clone_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/clone_test.exe")
else()
  add_test(clone_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(downsample_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/downsample_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(downsample_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/downsample_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(downsample_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/downsample_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(downsample_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/downsample_test.exe")
else()
  add_test(downsample_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(float_short_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/float_short_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(float_short_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/float_short_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(float_short_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/float_short_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(float_short_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/float_short_test.exe")
else()
  add_test(float_short_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(misc_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/misc_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(misc_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/misc_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(misc_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/misc_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(misc_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/misc_test.exe")
else()
  add_test(misc_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(multi_channel_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/multi_channel_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(multi_channel_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/multi_channel_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(multi_channel_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/multi_channel_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(multi_channel_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/multi_channel_test.exe")
else()
  add_test(multi_channel_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(multichan_throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/multichan_throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(multichan_throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/multichan_throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(multichan_throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/multichan_throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(multichan_throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/multichan_throughput_test.exe")
else()
  add_test(multichan_throughput_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(nullptr_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/nullptr_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(nullptr_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/nullptr_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(nullptr_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/nullptr_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(nullptr_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/nullptr_test.exe")
else()
  add_test(nullptr_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(reset_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/reset_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(reset_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/reset_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(reset_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/reset_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(reset_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/reset_test.exe")
else()
  add_test(reset_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(simple_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/simple_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(simple_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/simple_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(simple_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/simple_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(simple_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/simple_test.exe")
else()
  add_test(simple_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(snr_bw_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/snr_bw_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(snr_bw_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/snr_bw_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(snr_bw_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/snr_bw_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(snr_bw_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/snr_bw_test.exe")
else()
  add_test(snr_bw_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(streaming_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/streaming_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(streaming_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/streaming_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(streaming_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/streaming_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(streaming_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/streaming_test.exe")
else()
  add_test(streaming_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(termination_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/termination_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(termination_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/termination_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(termination_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/termination_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(termination_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/termination_test.exe")
else()
  add_test(termination_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/throughput_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(throughput_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/throughput_test.exe")
else()
  add_test(throughput_test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(varispeed_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Debug/varispeed_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(varispeed_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/Release/varispeed_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(varispeed_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/MinSizeRel/varispeed_test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(varispeed_test "E:/gitcode/Sinsy-NG/library/libsamplerate/cmake/RelWithDebInfo/varispeed_test.exe")
else()
  add_test(varispeed_test NOT_AVAILABLE)
endif()
